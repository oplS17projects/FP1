#lang racket
(require html-writing)
(require tzinfo)

;;create an output html file that I will write to
(define output (open-output-file "test.html"))

;;I wrote this to hopefully get the list of tzids to print as they do in drracket.
;;It seems however that they did not, im not sure why that is
(define (output-list lst)
  (if (null? lst)
      "\n"
      (string-append (car lst) "\n" (output-list (cdr lst)))))

;;The method first introduced on the racket documentation
(write-html
 '((html (head (title "My Test of HTML Writing and Time Zone"))
         (body (@ (bgcolor "white"))
               (h1 "Introduction")
               (p "My name is Rob and I am turning in this assignment very late.")
               (p "Sad face.")
               (h2 "Fun with tzinfo")
               (p "list of time zones:")
               (p "I am not sure why all of the time zones print out like this. When running the car and cadr of the list generated by (all-tzids) generate reasonable outputs as examined below")
               (p (string-append "(car (all-tzids)) -> " (car (all-tzids)) "\n" "(cadr (all-tzids)) -> " (cadr (all-tzids)) "  Apparently you cannot use functions in here. However you can see the result of the functions evaluation at the beginning of the next line.")))))
 output)

;;these were an attempt to evaluate a function and print its outcome with the html-write library
;;It does not seem to like white space though and joins the giant chunk of text genereated under them
(write-html-attribute-value-part-string (string-append "(car (all-tzids)) -> " (car (all-tzids)) "\n") output)
(write-html-attribute-value-part-string (string-append "(cadr (all-tzids)) -> " (cadr (all-tzids)) "\n") output)

;; I was hoping to print our the entire list of time zones in a readable format.
(write-html-attribute-value-part (output-list (all-tzids)) output)
;;  this produces the same output as the above statement
;;(write-html-attribute-value-part-string (output-list (all-tzids)) output)

;;These are remnants of exploration that caused errors I want to explore what they do later so Iam leaving them here
;;(write-html-pi (all-tzids) output)
;;(write-html-attribute-value-part-string (all-tzids) output)

;;close the file 
(close-output-port output)
               
               